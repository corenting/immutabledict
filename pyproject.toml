[project]
name = "immutabledict"
version = "4.2.1"
description = "Immutable wrapper around dictionaries (a fork of frozendict)"
license = { text = "MIT" }
authors = [
    { name = "Corentin Garcia", email = "corenting@gmail.com" }
]
readme = "README.md"
keywords = ["immutable", "dictionary"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3 :: Only",
]
requires-python = ">=3.8,<4.0"

[tool.poetry]
include = [
    { path = "tests", format = "sdist" }
]

[project.urls]
repository = "https://github.com/corenting/immutabledict"
documentation = "https://immutabledict.corenting.fr"
"Bug Tracker" = "https://github.com/corenting/immutabledict/issues"


[tool.poetry.urls]
"Changelog" = "https://github.com/corenting/immutabledict/blob/master/CHANGELOG.md"
"Bug Tracker" = "https://github.com/corenting/immutabledict/issues"
"Donation" = "https://corenting.fr/donate"


[tool.poetry.group.dev.dependencies]
coverage = "*"
myst-parser = { version = ">=3.0.1,<4", python = ">=3.9" }
pyright = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"
sphinx = { version = "^7.4", python = ">=3.9" }
tox = "*"

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), flake8-print (T20), ruff rules (RUF),
# isort (I), pep8-naming (N),  pyupgrade (UP), flake8-async (ASYNC),
# flake8-bandit (S), perflint (PERF) and pydocstyle (D)
select = ["E", "F", "T20", "RUF", "I", "N", "UP", "ASYNC", "S", "PERF", "D"]
ignore = [
    "E501",  # line too long as black is used
    "D203",  # one blank line before class
    "D212",  # multiline summary first line
    "D105"   # no docstrings for magic methods
]
per-file-ignores = {"tests/**" = ["S101", "D"]}

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
